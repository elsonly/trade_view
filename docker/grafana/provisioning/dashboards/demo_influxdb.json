{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 7,
  "iteration": 1648201011173,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "volume"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlYlRd",
                  "seriesBy": "last"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "maxDataPoints": 100000,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C6603E967DC8568"
          },
          "query": "from(bucket:\"sino_quotes\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> filter(fn: (r) => r.code == ${Code:doublequote})\r\n  |> filter(fn: (r) => r._field == \"close\")\r\n  |> drop(columns: [\"code\", \"_measurement\"])\r\n",
          "refId": "close"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C6603E967DC8568"
          },
          "hide": false,
          "query": "from(bucket:\"sino_quotes\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> filter(fn: (r) => r.code == ${Code:doublequote})\r\n  |> filter(fn: (r) => r._field == \"volume\")\r\n  |> drop(columns: [\"code\", \"_measurement\"])",
          "refId": "volume"
        }
      ],
      "title": "Tick",
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 4,
      "maxDataPoints": 100000,
      "options": {
        "candleStyle": "candles",
        "colorStrategy": "open-close",
        "colors": {
          "down": "red",
          "up": "green"
        },
        "includeAllFields": false,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "mode": "candles+volume"
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C6603E967DC8568"
          },
          "query": "data = from(bucket:\"sino_quotes\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> filter(fn: (r) => r.code == ${Code:doublequote})\r\n  |> filter(fn: (r) => r._field == \"close\")\r\n  |> drop(columns: [\"code\", \"_measurement\"])\r\n\r\ndata_open = data\r\n  |> aggregateWindow(every: ${Kbar_Freq}, fn: first)\r\n  |> set(key: \"_field\", value: \"open\")\r\n\r\ndata_close = data\r\n  |> aggregateWindow(every: ${Kbar_Freq}, fn: last)\r\n  |> set(key: \"_field\", value: \"close\")\r\n\r\ndata_high = data\r\n  |> aggregateWindow(every: ${Kbar_Freq}, fn: max)\r\n  |> set(key: \"_field\", value: \"high\")\r\n\r\ndata_low = data\r\n  |> aggregateWindow(every: ${Kbar_Freq}, fn: min)\r\n  |> set(key: \"_field\", value: \"low\")\r\n\r\n\r\ndata_vol = from(bucket:\"sino_quotes\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> filter(fn: (r) => r.code == ${Code:doublequote})\r\n  |> filter(fn: (r) => r._field == \"volume\")\r\n  |> drop(columns: [\"code\", \"_measurement\"])\r\n  |> aggregateWindow(every: ${Kbar_Freq}, fn: sum)\r\n  |> set(key: \"_field\", value: \"volume\")\r\n\r\nunion(tables: [data_open, data_close, data_high, data_low, data_vol])\r\n",
          "refId": "close"
        }
      ],
      "title": "OHLCV",
      "type": "candlestick"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 5,
      "maxDataPoints": 100000,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "_field {_start=\"2022-03-21 22:32:57.6 +0000 UTC\", _stop=\"2022-03-22 07:21:07.198 +0000 UTC\", code=\"2330\"}"
          }
        ]
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C6603E967DC8568"
          },
          "query": "from(bucket:\"sino_quotes\")\r\n  |> range(start: 0)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> last()\r\n  |> pivot(\r\n      rowKey:[\"_time\", \"code\"],\r\n      columnKey: [\"_field\"],\r\n      valueColumn: \"_value\"\r\n  )\r\n  |> drop(columns: [\"_stop\", \"_start\", \"_measurement\", \"_time\"])\r\n  |> group()\r\n  \r\n  |> map(\r\n    fn: (r) => ({ \r\n      r with mid_prc: 0.5*(r.ask + r.bid)\r\n    })\r\n  )",
          "refId": "A"
        }
      ],
      "title": "Quote",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "ask": 1,
              "ask_vol": 2,
              "bid": 3,
              "bid_vol": 4,
              "close": 5,
              "code": 0,
              "mid_prc": 6,
              "tick_type": 7,
              "vol": 8
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 7,
      "maxDataPoints": 100000,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C6603E967DC8568"
          },
          "query": "from(bucket:\"sino_quotes\")\r\n  |> range(start: 0)\r\n  |> filter(fn: (r) => r._measurement == \"h_tick\")\r\n  |> filter(fn: (r) => r._field == \"bid_vol\" or r._field == \"ask_vol\" or r._field == \"vol\")\r\n  |> last()\r\n  |> pivot(\r\n      rowKey:[\"_time\", \"code\"],\r\n      columnKey: [\"_field\"],\r\n      valueColumn: \"_value\"\r\n  )\r\n  |> drop(columns: [\"_stop\", \"_start\", \"_measurement\", \"_time\"])\r\n  |> group()\r\n  \r\n  |> map(\r\n    fn: (r) => ({ \r\n      r with vol_pct: float(v: r.vol) / (float(v: r.bid_vol) + float(v: r.ask_vol))*100.0\r\n    })\r\n  )\r\n  |> drop(columns: [\"vol\", \"ask_vol\", \"bid_vol\"])",
          "refId": "A"
        }
      ],
      "title": "Quote",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "ask": 1,
              "ask_vol": 2,
              "bid": 3,
              "bid_vol": 4,
              "close": 5,
              "code": 0,
              "mid_prc": 6,
              "tick_type": 7,
              "vol": 8
            },
            "renameByName": {}
          }
        }
      ],
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 2,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "buffer": 300000,
          "channel": "stream/gf_pusher/sino/tick/MXFD2",
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "filter": {
            "fields": []
          },
          "queryType": "measurements",
          "refId": "A"
        }
      ],
      "title": "Stream",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 33,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "MXFD2",
          "value": "MXFD2"
        },
        "definition": "from(bucket:\"sino_quotes\")\r\n  |> range(start: 0)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> last()\r\n  |> keep(columns: [\"code\"])\r\n  |> group()\r\n  |> distinct(column: \"code\")\r\n  ",
        "description": "available code",
        "hide": 1,
        "includeAll": false,
        "label": "Code",
        "multi": false,
        "name": "Code",
        "options": [],
        "query": "from(bucket:\"sino_quotes\")\r\n  |> range(start: 0)\r\n  |> filter(fn: (r) => r._measurement == \"tick\")\r\n  |> last()\r\n  |> keep(columns: [\"code\"])\r\n  |> group()\r\n  |> distinct(column: \"code\")\r\n  ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "5m",
          "value": "5m"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Kbar_Freq",
        "options": [
          {
            "selected": false,
            "text": "1s",
            "value": "1s"
          },
          {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": true,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "15m",
            "value": "15m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          }
        ],
        "query": "1s, 1m, 5m, 15m, 1h, 1d",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "2022-03-25T03:36:51.150Z",
    "to": "2022-03-25T06:06:09.174Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "250ms",
      "1s",
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Demo Influxdb",
  "uid": "EEn4eAEnk",
  "version": 54,
  "weekStart": ""
}